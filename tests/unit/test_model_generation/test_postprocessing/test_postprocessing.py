# -*- coding: utf-8 -*-
"""
Created on Fri Sep  4 11:39:27 2020

@author: David
"""
import unittest
import unittest.mock
from tool.model_generation.postprocessing.postprocessing import (
     set_default_columns
)
import collections

new_tuple = collections.namedtuple("new_tup", ["columns"])
def create_mock(*args, **kwargs):
    m = unittest.mock.Mock()
    m.return_value = new_tuple(["Best_model_Mcc", "Dataset", "other"])
    return m

@unittest.mock.patch("pandas.read_csv", new_callable=create_mock)
class TestPostprocessing(unittest.TestCase):
    def setUp(self):
        self.config = {"STATISTICS_DESCRIPTIVE_COLUMNS": ["Dataset"],
                       "STATISTICS_DATA_COLUMNS": ["Best_model_Mcc"]}
        self.original_config = self.config.copy()

    def test_set_default_columns_no_add(self, patched):
        set_default_columns(self.config, "whatever.csv")
        self.assertEqual(self.config, self.original_config)

    def test_set_default_columns_add_data_columns(self, patched):
        del self.config["STATISTICS_DATA_COLUMNS"]
        set_default_columns(self.config, "whatever.csv")
        self.assertEqual(
            self.config,
            self.original_config)

    def test_set_default_columns_add_descriptive_columns(self, patched):
        del self.config["STATISTICS_DESCRIPTIVE_COLUMNS"]
        set_default_columns(self.config, "whatever.csv")
        self.assertEqual(
            self.config,
            self.original_config)

    def test_set_default_columns_add_both(self, patched):
        self.config = {}
        set_default_columns(self.config, "whatever.csv")
        self.assertEqual(
            self.config,
            self.original_config)