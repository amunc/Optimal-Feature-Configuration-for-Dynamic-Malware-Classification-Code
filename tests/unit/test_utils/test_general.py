# -*- coding: utf-8 -*-
"""
Created on Thu Sep  3 08:51:55 2020

@author: David
"""
import unittest
import numpy as np
from tool.utils.parameterize_utils import (
    parameterize_directly, RepeatingTestCase
)
from tool.utils.general import (
    is_iterable, sized_sequence_and_not_string, is_list
)

class TestGeneral(RepeatingTestCase):
    @parameterize_directly(
        [
         ["asdd", True, True, True, False],
         [[1,2,3], True, True, True, True],
         [b"\x41\x56", True, True, True, False],
         [(1, 2), True, False, True, False],
         [(1, 2), False, True, False, True],
         [{1,2}, True, True, True, False],
         [{1,2}, False, False, True, True],
         [dict(), False, True, True, False],
         [dict(), True, False, False, True],
         [12, False, False, False, False]
        ],
        args=["obj", "exclude_tuples", "exclude_sets", "exclude_dicts",
              "expected"],
        func_names=["string", "list", "bytes", "tuple_excluding_tuples",
                    "tuple_including_tuples", "set_excluding_sets",
                    "set_including_sets", "dict_excluding_dicts",
                    "dict_including_dicts", "not_iterable"]
    )
    def test_is_iterable(self, expected, **kwargs):
        self.assertEqual(is_iterable(**kwargs), expected)

    def test_sized_sequence_and_not_string(self):
        values = ["asd", (tuple(), ), dict(a=12), 12, {1, 2}, [[1, 2]]]
        expected = [False, True, False, False, False, True]
        msgs = ["string", "empty_tuple", "dict", "int", "set", "list"]
        self.repeat(sized_sequence_and_not_string, values, expected,
                    self.assertEqual, msgs=msgs)

    def test_is_list(self):
        values = ["asd", (tuple(), ), dict(a=12), 12, {1, 2}, [[1, 2]],
                  [np.array([1, 2, 3, 4, 5])]]
        expected = [False, False, False, False, False, True, True]
        msgs = ["string", "empty_tuple", "dict", "int", "set", "list",
                "ndarray"]
        self.repeat(is_list, values, expected,
                    self.assertEqual, msgs=msgs)
