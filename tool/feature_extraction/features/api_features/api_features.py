# -*- coding: utf-8 -*-
"""
Created on Tue May  5 12:37:43 2020

@author: David
"""
from collections import deque, defaultdict
from ..utils.dictionary import (
        empty_individual_and_product_dict, sum_dictionaries
)


CATEGORIES = ["__notification__", "certificate", "crypto", "exception", "file",
              "iexplore", "process", "misc", "netapi", "network", "office",
              "ole", "registry", "resource", "services", "synchronisation",
              "system", "ui"]

RECODIFIED_CATEGORIES = ['A%d' % i for i in range(len(CATEGORIES))]


def recodification_dictionary():
    return dict(zip(CATEGORIES, RECODIFIED_CATEGORIES))


def empty_counts_dictionary(n):
    return empty_individual_and_product_dict(RECODIFIED_CATEGORIES, n)


def recodify_call_sequence(sequence, reco_dict=None):
    reco_dict = reco_dict or recodification_dictionary()
    return map(lambda call: reco_dict[call['category']], sequence)


def extract_individual_and_ngram_counts(sequence, n=2):
    ngram = deque(maxlen=n)
    counts = defaultdict(int)
    for category in sequence:
        ngram.append(category)
        counts[category] += 1
        if len(ngram) == n:
            counts[tuple(ngram)] += 1
    return counts


def extract_recodified_sequences(json_data):
    return map(lambda x: recodify_call_sequence(x['calls']),
               json_data['behavior']['processes'])


def extract_api_features(json_data, n=2):
    features = empty_counts_dictionary(n)
    calls = extract_recodified_sequences(json_data)
    counts = sum_dictionaries(map(extract_individual_and_ngram_counts, calls))
    features.update(counts)
    return features
