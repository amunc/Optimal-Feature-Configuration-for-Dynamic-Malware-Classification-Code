from enum import Enum
from collections import UserDict

class DescriptiveStats:
    def __init__(self, column_tuple, count=None, value=None):
        self.name = column_tuple
        self.count = count or 0
        self.value = value or 0

    def comp(self):
        return (self.count, self.value)

    def __hash__(self):
        return hash(self.name)

    def __eq__(self, other):
        return self.comp() == other.comp()

    def __lt__(self, other):
        return self.comp() < other.comp()

    def __gt__(self, other):
        return self.comp() > other.comp()

    def __iter__(self):
        return iter(self.name)

    def __repr__(self):
        return str(self.name)

    def __len__(self):
        return len(self.name)

    def to_json(self):
        #return (self.name, self.count, self.value)
        return {"name": self.name, "count": self.count, "value": self.value}


class ResultDict(UserDict):
    def to_json(self):
        return list(self.items())


class Order(Enum):
    GREATER = 1
    LOWER = -1
    EQUAL = 0

    def to_json(self):
        return self.value
