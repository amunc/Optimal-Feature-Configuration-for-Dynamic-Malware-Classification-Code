# -*- coding: utf-8 -*-
"""
Created on Tue Jul  7 09:19:44 2020

@author: David
"""
import sys
import os
import shutil
import logging    # important if I am going to load log config here
import logging.config
from .logging import load_log_config
from .file_search import (
    get_full_paths_of_files, empty_directory, create_directory
)
from .general import is_iterable
from .settings import load_default_settings, load_user_settings
from .args_parse import getcmd_args
from collections import ChainMap
from pathlib import Path
from typing import Iterable, Union, Mapping, Any
from ..typing import Settings


def add_to_python_search_path(paths: Iterable[str]) -> None:
    '''
    Adds paths to Python search path

    Arguments
    ---------
    paths: Iterable[str]
        The paths to be added
    '''
    sys.path.extend(paths)


def remove_files(settings: Settings) -> None:
    '''
    Checks whether DELETE_FILES_AT_START is set. If so, empty the output
    directories

    Arguments
    ---------
    settings: Settings
        The settings of the tool
    '''
    if (settings.get("DELETE_FILES_AT_START", False)):
        output_dirs = [
                settings["FEATURE_OUTPUT_PATH"], settings["INFO_OUTPUT_PATH"],
                settings["STATISTICS_OUTPUT_PATH"]
        ]
        empty_directory(output_dirs)


def check_directories_existence(settings: Settings) -> None:
    '''
    Checks whether output directories exist. If not, create them

    Arguments
    ---------
    settings: Settings
        The settings of the tool
    '''
    output_dirs = [
                settings["FEATURE_OUTPUT_PATH"], settings["INFO_OUTPUT_PATH"],
                settings["STATISTICS_OUTPUT_PATH"]
    ]
    for d in output_dirs:
        create_directory(d)


def initialize(settings: Settings) -> None:
    '''
    Does some initialization: loading setting, adding directories to Python
    search path and checking the existence of output directories

    Arguments
    ---------
    settings: Settings
        The settings of the tool
    '''
    add_to_python_search_path(settings.get("ADD_TO_PYTHON_PATH", []))
    load_log_config(settings["LOG_CONFIG"])
    check_directories_existence(settings)
    remove_files(settings)


def get_settings() -> Settings:
    '''
    Loads default, user and command line settings. The order of preference
    is the inverse of the order in which they have enumerated

    Returns
    -------
    Settings
    '''
    defaults = load_default_settings()
    user = load_user_settings()
    cmd = getcmd_args()
    return ChainMap(cmd, user, defaults)
